{"version":3,"sources":["components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","utilits/validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["FormControl","input","meta","touched","error","children","hasError","className","s","formControl","Textarea","props","restProps","child","Input","createField","component","validators","name","placeholder","text","validate","module","exports","required","value","maxLengthCreator","maxLength","length","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","mapStateToPropsRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","target","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","onSubmit","type","keys","contacts","map","key","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","contact","ProfileInfo","savePhoto","saveProfile","Preloader","avatar","src","photos","large","userPhoto","alt","files","initialValues","formData","then","Post","item","message","likeCounts","maxLength10","AddNewPostReduxForm","Field","MyPosts","postsElements","posts","p","id","addPost","newPostText","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","getUserProfile","getStatus","refreshProfile","prevProps","compose","withRouter"],"mappings":"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","file":"static/js/4.08800a8c.chunk.js","sourcesContent":["import React from 'react';\nimport { Field } from 'redux-form';\nimport s from './FormsControls.module.css';\n\nconst FormControl = ({input, meta: {touched, error}, children }) => {\n    const hasError = touched && error;\n    return (\n        <div className={s.formControl + ' ' + ( hasError ? s.error : ' ')}>\n            <div>\n                {children}\n            </div>\n            { hasError && <span>{error}</span> }\n        </div>\n    )\n\n}\n\n\nexport const Textarea = (props) => {\n    const { input, meta, child, ...restProps } = props;\n    return <FormControl {...props} ><textarea {...input} {...restProps} /></FormControl>\n}\n\nexport const Input = (props) => {\n    const { input, meta, child, ...restProps } = props;\n    return <FormControl {...props} ><input {...input} {...restProps} /></FormControl>\n}\n\nexport const createField = (  component, validators, name, placeholder, props={}, text='' ) => {\n    return <div>\n        <Field component={component} \n            validate={validators} \n            name={name} \n            placeholder={placeholder} \n            {...props}\n            /> {text}\n    </div>\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3oI2W\",\"error\":\"FormsControls_error__9lcue\",\"formSummaryError\":\"FormsControls_formSummaryError__1F2-S\"};","export const required = (value) => {\n    if (value) return undefined;\n    return 'Filed is required';\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\n    return undefined;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\n\nconst mapStateToPropsRedirect = (state) => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render () {\n            if (!this.props.isAuth) return <Redirect to='/login' />\n                return <Component {...this.props} />\n            \n        }\n    }\n    let ConnectAuthRedirectComponent = connect(mapStateToPropsRedirect) (RedirectComponent);\n\n    return ConnectAuthRedirectComponent \n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ProfileInfo_avatar__3xuFq\",\"about\":\"ProfileInfo_about__ogyhT\",\"contact\":\"ProfileInfo_contact__1N3gp\",\"error\":\"ProfileInfo_error__rRsoU\",\"status\":\"ProfileInfo_status__2G3BZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"MyPosts_form__2b1nv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","import React, { useEffect, useState } from 'react';\nimport s from './ProfileInfo.module.css';\n\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect( () => {\n        setStatus(props.status)\n    }, [props.status] );\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    };\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    };\n\n    const onStatusChange = (e) => {\n        setStatus(e.target.value);\n    };\n\n    return (\n        <div>\n            { !editMode &&\n                <div className={s.status} >\n                    <b>Status :</b><span onDoubleClick={ activateEditMode } >{props.status || '-----'}</span>\n                </div>\n            }\n            { editMode && \n                <div>\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\n                </div>\n            }\n        </div>\n    )\n    \n}\n\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport { reduxForm } from 'redux-form';\nimport { createField, Input, Textarea } from '../../common/FormsControls/FormsControls';\nimport s from './ProfileInfo.module.css'\n\n\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\n    return <form onSubmit={handleSubmit} >\n        <div><button>save</button></div>\n        { error && <div className={s.error}>\n            <p>{ error }</p>\n        </div> \n        }\n        <div>\n            <b>Full name :</b> {createField(Input, [], 'fullName', 'Full name')}\n        </div>\n        <div>\n            <b>Looking for a job :</b> {createField(Input, [], 'lokingForAJob', '', {type: 'checkbox'})}\n        </div>\n        <div>\n            <b>Professional skills :</b> {createField(Textarea, [], 'lookingForAJobDescription', 'My professional skills')}\n        </div>\n        <div>\n            <b>About me :</b> {createField(Textarea, [], 'aboutMe', 'About me')}\n        </div>\n        <div>\n            <b>Contacts :</b> {Object.keys(profile.contacts).map(key => {\n                return <div>\n                   <b>{key} : {createField(Input, [], 'contacts.' + key, key)}</b>\n                </div>\n            })}\n        </div>\n    </form>\n}\n\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\n\nexport default ProfileDataFormReduxForm;","import React, { useState } from 'react'\nimport Preloader from '../../common/Preloader/Preloader'\nimport s from './ProfileInfo.module.css'\nimport userPhoto from '../../../assets/images/user.png';\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\nimport ProfileDataForm from './ProfileDataForm';\n\n\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\n    let [editMode, setEditMode] = useState(false);\n\n    if (!profile) {\n        return <Preloader />\n    }\n\n    const onMainPhotoSelected = (e) => {\n        if(e.target.files.length) {\n            savePhoto(e.target.files[0])\n        }\n    }\n\n    const onSubmit = (formData) => {\n        saveProfile(formData).then(\n            () => {\n                setEditMode(false);\n            }\n        )\n    }\n\n    return (\n        <div className={s.avatar}>\n            <img src={ profile.photos.large || userPhoto } alt='Ava'/>\n            { isOwner && <input type={'file'} onChange={onMainPhotoSelected} /> }\n            { editMode \n                ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} /> \n                : <ProfileData goToEditMode={() => {setEditMode(true)}} profile={profile} isOwner={isOwner} />}\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\n        </div>\n    )\n}\n\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\n    return <div >\n        {isOwner && <div><button onClick={goToEditMode} >edit</button></div>}\n        <div>\n            <b>Full name :</b> {profile.fullName}\n        </div>\n        <div>\n            <b>Looking for a job :</b> {profile.lookingForAJob ? 'no' : 'yes'}\n        </div>\n        { profile.lookingForAJob &&\n            <div>\n                <b>Professional skills :</b> {profile.lookingForAJobDescription}\n            </div>\n        }\n        <div>\n            <b>About me :</b> {profile.aboutMe}\n        </div>\n        <div>\n            <b>Contacts :</b> {Object.keys(profile.contacts).map(key => {\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\n            })}\n        </div>\n    </div>\n}\n\nconst Contact = ({contactTitle, contactValue}) => {\n    return <div className={s.contact}>\n        <b>{contactTitle} :</b> {contactValue}\n    </div>\n}\n\n\nexport default ProfileInfo;","import React from 'react'\nimport s from './Post.module.css'\nimport userPhoto from '../../../../assets/images/user.png'\n\n\nconst Post = (props) => {\n    return (\n        <div className={s.item}>\n            <img src={userPhoto} alt='avatar' />\n            { props.message }\n            <div>\n                <span>Like</span> { props.likeCounts }\n            </div>\n        </div>\n    )\n}\n\nexport default Post;","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { maxLengthCreator, required } from '../../../utilits/validators';\nimport { Textarea } from '../../common/FormsControls/FormsControls';\nimport s from './MyPosts.module.css'\nimport Post from './Post/Post';\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst AddNewPostForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} >\n        <div>\n            <Field component={Textarea} name='newPostText' validate={[required, maxLength10]} placeholder='Enter your message...' />\n        </div>\n        <div>\n            <button >Send</button>\n        </div>\n        </form>\n    )\n}\n\nconst AddNewPostReduxForm = reduxForm({form: 'profileAddNewPostText'}) (AddNewPostForm);\n\nconst MyPosts = (props) => {\n    let postsElements = props.posts.map( p => <Post key={p.id} message={p.message} likeCounts={p.likeCounts}/>);\n\n    const onAddPost = (value) => {\n        props.addPost(value.newPostText);\n    }\n\n    return (\n        <div>\n            <h3>My post</h3>\n            <div className={s.form}>\n                <AddNewPostReduxForm onSubmit={onAddPost} />\n            </div>\n            { postsElements }\n        </div>\n    )\n};\n\nexport default MyPosts;","\nimport { connect } from 'react-redux';\nimport { addPostActionCreator } from '../../../redux/reducers/profile-reducer';\nimport MyPosts from './MyPosts';\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostText) => {\n            dispatch(addPostActionCreator(newPostText));\n        }\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\n\nexport default MyPostsContainer;","import React from 'react';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\n\n\nconst Profile = (props) => {\n    return (\n        <div>\n            <ProfileInfo savePhoto={props.savePhoto} \n                        isOwner={props.isOwner} \n                        profile={props.profile} \n                        status={props.status} \n                        saveProfile={props.saveProfile}\n                        updateStatus={props.updateStatus} />\n            <MyPostsContainer />\n        </div>\n    )\n}\n\nexport default Profile;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Profile from './Profile';\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from '../../redux/reducers/profile-reducer';\nimport { withRouter } from 'react-router';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\n\n\nclass ProfileContainer extends React.Component {\n    refreshProfile() {\n        let userId = this.props.match.params.userId;\n        if (!userId) { \n            userId = this.props.authorizedUserId;\n            if(!userId) {\n                this.props.history.push('/login');\n            }\n        };\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    } \n\n    componentDidMount() {\n        this.refreshProfile();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\n            this.refreshProfile();\n        }\n    }\n\n    render() {\n        return (\n            <Profile {...this.props} \n                    isOwner={!this.props.match.params.userId}\n                    profile={this.props.profile} \n                    status={this.props.status} \n                    updateStatus={this.props.updateStatus} \n                    savePhoto={this.props.savePhoto}/>\n        )\n    }\n}\nlet mapStateToProps = (state) => ({ \n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n});\n\n\nexport default compose(\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\n    withRouter,\n    withAuthRedirect\n) (ProfileContainer);"],"sourceRoot":""}