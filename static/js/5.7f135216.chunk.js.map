{"version":3,"sources":["components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","utilits/validators.js","hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Messages/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Messages/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["FormControl","input","meta","touched","error","children","hasError","className","s","formControl","Textarea","props","restProps","child","Input","createField","component","validators","name","placeholder","text","validate","module","exports","required","value","maxLengthCreator","maxLength","length","mapStateToPropsRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","DialogItem","path","id","dialog","activeClassName","activeLink","Message","message","maxLength50","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogsItem","addMessage","newMessageBody","compose","dispatch","addMessageActionCreator"],"mappings":"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","file":"static/js/5.7f135216.chunk.js","sourcesContent":["import React from 'react';\nimport { Field } from 'redux-form';\nimport s from './FormsControls.module.css';\n\nconst FormControl = ({input, meta: {touched, error}, children }) => {\n    const hasError = touched && error;\n    return (\n        <div className={s.formControl + ' ' + ( hasError ? s.error : ' ')}>\n            <div>\n                {children}\n            </div>\n            { hasError && <span>{error}</span> }\n        </div>\n    )\n\n}\n\n\nexport const Textarea = (props) => {\n    const { input, meta, child, ...restProps } = props;\n    return <FormControl {...props} ><textarea {...input} {...restProps} /></FormControl>\n}\n\nexport const Input = (props) => {\n    const { input, meta, child, ...restProps } = props;\n    return <FormControl {...props} ><input {...input} {...restProps} /></FormControl>\n}\n\nexport const createField = (  component, validators, name, placeholder, props={}, text='' ) => {\n    return <div>\n        <Field component={component} \n            validate={validators} \n            name={name} \n            placeholder={placeholder} \n            {...props}\n            /> {text}\n    </div>\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3oI2W\",\"error\":\"FormsControls_error__9lcue\",\"formSummaryError\":\"FormsControls_formSummaryError__1F2-S\"};","export const required = (value) => {\n    if (value) return undefined;\n    return 'Filed is required';\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\n    return undefined;\n}","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\n\nconst mapStateToPropsRedirect = (state) => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render () {\n            if (!this.props.isAuth) return <Redirect to='/login' />\n                return <Component {...this.props} />\n            \n        }\n    }\n    let ConnectAuthRedirectComponent = connect(mapStateToPropsRedirect) (RedirectComponent);\n\n    return ConnectAuthRedirectComponent \n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItem\":\"Dialogs_dialogsItem__8wYI2\",\"messages\":\"Dialogs_messages__1w_Up\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__3tDA2\",\"activeLink\":\"DialogItem_activeLink__1IQU6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__8Yhhu\"};","import React from 'react';\nimport { NavLink } from 'react-router-dom'\nimport s from './DialogItem.module.css'\n\nconst DialogItem = (props) => {\n    const path = '/dialogs/' + props.id;\n    return (\n        <div className={s.dialog}>\n            <NavLink to={path} activeClassName={s.activeLink}>{props.name}</NavLink>\n        </div>\n    )\n}\n\nexport default DialogItem;","import React from 'react';\nimport s from './Message.module.css';\n\nconst Message = (props) => {\n    \n    return (\n        <div className={s.message}>\n            {props.message}\n        </div>\n    )\n}\n\nexport default Message;","import React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Messages/Message';\nimport { Field, reduxForm } from 'redux-form';\nimport { Textarea } from '../common/FormsControls/FormsControls';\nimport { maxLengthCreator, required } from '../../utilits/validators';\n\nconst maxLength50 = maxLengthCreator(50);\n\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} >\n        <div>\n            <Field component={Textarea} validate={[required, maxLength50]} name='newMessageBody' placeholder='Enter your message...' />\n        </div>\n        <div>\n            <button >Send</button>\n        </div>\n        </form>\n    )\n}\n\nconst AddMessageReduxForm = reduxForm({form: 'dialogAddMessageForm'}) (AddMessageForm);\n\n\nconst Dialogs = (props) => {\n    let state = props.dialogsPage;\n\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} />); \n    let messagesElements = state.messages.map ( m => <Message message={m.message} key={m.id} />);\n\n    const addNewMessage = (value) => { \n        props.addMessage(value.newMessageBody)\n    }\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItem}>\n                { dialogsElements }\n            </div>\n\n            <div className={s.messages}>\n                { messagesElements }\n            </div>\n            <AddMessageReduxForm onSubmit={addNewMessage} />\n        </div>\n    )\n}\n\nexport default Dialogs;","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { addMessageActionCreator } from '../../redux/reducers/dialogs-reducer';\nimport Dialogs from './Dialogs';\n\nconst mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addMessage: (newMessageBody) => {\n            dispatch(addMessageActionCreator(newMessageBody));\n        }\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n) (Dialogs);\n"],"sourceRoot":""}